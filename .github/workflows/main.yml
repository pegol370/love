name: Build APK - Ultimate Fix
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git zip unzip python3-dev zlib1g-dev libncurses5-dev libffi-dev libssl-dev autoconf libtool cmake
          
      - name: Install Python packages
        run: |
          pip install --upgrade pip
          pip install cython==0.29.33
          pip install buildozer==1.4.0
          pip install kivy
          
      - name: Create complete buildozer.spec file
        run: |
          cat > buildozer.spec << 'EOF'
          [app]
          title = LoveMum
          package.name = lovemum
          package.domain = org.pegol
          source.dir = .
          source.include_exts = py,png,jpg,kv,atlas
          version = 1.0
          requirements = python3,kivy
          orientation = portrait
          fullscreen = 0
          
          [buildozer]
          log_level = 2
          
          [android]
          android.api = 30
          android.minapi = 21
          android.sdk = 30
          android.ndk = 23b
          android.build_tools = 30.0.3
          android.accept_sdk_license = True
          android.arch = arm64-v8a
          android.permissions = INTERNET
          android.gradle_dependencies = 
          android.gradle_repositories = google(), mavenCentral()
          android.enable_androidx = True
          
          # إجبار استخدام إصدارات محددة
          android.gradle = gradle-6.1.1-all.zip
          EOF
          
      - name: Show buildozer.spec content
        run: |
          echo "=== محتويات buildozer.spec ==="
          cat buildozer.spec
          echo "=========================="
          
      - name: Pre-setup Android SDK manually with correct versions
        run: |
          # إنشاء مجلد buildozer
          mkdir -p $HOME/.buildozer/android/platform
          cd $HOME/.buildozer/android/platform
          
          # تحميل SDK command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip
          mkdir -p android-sdk/cmdline-tools
          mv cmdline-tools android-sdk/cmdline-tools/latest
          
          # تحميل NDK 23b
          wget -q https://dl.google.com/android/repository/android-ndk-r23b-linux.zip
          unzip -q android-ndk-r23b-linux.zip
          
          # إعداد متغيرات البيئة
          export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          
          # قبول جميع الرخص أولاً
          echo "=== قبول الرخص ==="
          yes | sdkmanager --licenses
          
          # تثبيت المكونات المحددة فقط
          echo "=== تثبيت المكونات ==="
          sdkmanager "platforms;android-30"
          sdkmanager "build-tools;30.0.3"
          sdkmanager "platform-tools"
          
          # التحقق من التثبيت
          echo "=== التحقق من build-tools ==="
          ls -la $ANDROID_HOME/build-tools/
          ls -la $ANDROID_HOME/build-tools/30.0.3/
          
          # إنشاء ملف repository config لمنع تحديث الإصدارات
          mkdir -p $HOME/.android
          echo '<?xml version="1.0" encoding="UTF-8"?><sdk:sdk-repository xmlns:sdk="http://schemas.android.com/sdk/repository/android/common/01"/>' > $HOME/.android/repositories.cfg
          
      - name: Build APK with forced environment
        run: |
          # تأكيد متغيرات البيئة
          export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export ANDROID_NDK_HOME=$HOME/.buildozer/android/platform/android-ndk-r23b
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$JAVA_HOME/bin:$PATH
          
          # تأكيد وجود build-tools
          echo "=== التحقق النهائي من build-tools ==="
          ls -la $ANDROID_HOME/build-tools/30.0.3/ || echo "build-tools غير موجود!"
          
          # منع buildozer من تحديث SDK
          echo "=== منع التحديثات ==="
          export BUILDOZER_ANDROID_SKIP_UPDATE=1
          
          # بناء APK
          buildozer -v android debug
          
      - name: Search for APK files everywhere
        run: |
          echo "=== البحث الشامل عن APK ==="
          find $HOME -name "*.apk" -type f 2>/dev/null | head -10
          echo "=== bin directory ==="
          ls -la bin/ 2>/dev/null || echo "لا يوجد مجلد bin"
          echo "=== buildozer build directory ==="
          find $HOME/.buildozer -path "*/build/*/bin" -type d 2>/dev/null | head -5
          find $HOME/.buildozer -name "*.apk" -type f 2>/dev/null | head -5
          
      - name: Copy APK to workspace
        run: |
          # إنشاء مجلد bin إذا لم يكن موجود
          mkdir -p bin
          
          # البحث عن APK ونسخه
          APK_FILE=$(find $HOME -name "*.apk" -type f 2>/dev/null | head -1)
          if [ -n "$APK_FILE" ]; then
            echo "وُجد APK في: $APK_FILE"
            cp "$APK_FILE" bin/LoveMum-debug.apk
            echo "تم نسخ APK إلى bin/"
            ls -la bin/
          else
            echo "لم يُعثر على ملف APK"
          fi
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: LoveMum-APK
          path: bin/
